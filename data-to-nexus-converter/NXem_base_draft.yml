#kuehbacm at hu-berlin.de, 11/2021
#a draft version of a NeXus application definition for electron microscopy
#the draft uses the application example of scanning nanobeam diffraction in a transmission electron microscope experiments
#but supplements the relevant metadata for this application example with more generalized components
#that could also be used e.g. as building blocks for a general/template for electron microscopy application application definitions
#which provide components of which most are by default optional but can be used when as fine granularity
#of the description is desired as to detail the technical components of the microscope (lenses, stigmators, detectors),
#and geometrical transformations which map coordinate systems of components to one another such that
#the application definition can be made so specific that it enables a digital setting up of the components for e.g.
#ray-tracing based simulation tools of the entire instrument
name: NXem_base_draft
type: nx_object
doc: draft set of components for application definitions for electron microscopy, here exemplified with scanning nanobeam diffraction in transmission electron microscopes in mind
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays
  imageid: Frame or given number to distinguish different images in a stack
  ypos: Pixel coordinate in the slow-changing direction
  xpos: Pixel coordinate in the fast-changing direction
  nimages: Total of images in the imagestack
  ny: Pixel counts in the slow-changing direction
  nx: Pixel counts in the fast-changing direction
entry1__nx_entry:
# if exists keyword is not specified, we assume exists: optional
  exists: required
  experiment_identifier:
    doc: Unique identifier of the experiment, such as a (globally persistent) unique identifier. The identifier is usually defined by the facility or principle investigator. The identifier enables to link experiments to e.g. proposals.
  experiment_description:
  start_time:
    type: nx_date_time
    units:  nx_time
  end_time:
    type: nx_date_time
    units: nx_time
  duration:
    type: nx_int
    units: nx_time
  collection_time:
    type: nx_int
    units: nx_time
  program_name:
    doc: Commercial or otherwise defined given name to the program that was used to generate the results files with measurements and metadata.
  program_version:
    doc: Either version with build number, commit hash, or description of a (online) repository where the source code of the program and build instructions can be found so that the program can be configured in such a way that result files can be created ideally in a deterministic manner.
  application_def__nx_subentry:
    definition_local:
      doc: FAIRmat-specific candidate proposal for an application definition exemplifying for scanning nanobeam diffraction
      version:
        doc: Ideally version with build number are commit hash of the application definition. If not available a free-text description.
      url:
        doc: URL where to find further material (documentation, examples) relevant to the application definition
  operator__nx_user:
    exists: [min, 1]
    doc: Contact information of at least the user of the instrument or the principal investigator who created the file. Adding multiple users is recommended.
    name:
    affiliation:
      doc: Name of the affiliation of the user at the point in time when the experiment was performed.
    address:
    email:
    orcid:
    telephone_number:
  specimen__nx_sample:
    exists: [min, 1]
    name:
    sample_history:
      doc: Ideally, a reference to the location or a unique (globally persistent) identifier (e.g.) of e.g. another file which gives as many as possible details of the material, its microstructure, and its thermo-chemo-mechanical processing/preparation history. In the case that such a detailed history of the sample is not available, use this field as a free-text description to specify details of the sample and its preparation.
    preparation_date:
      type: nx_date_time
      units: nx_time
#    preparation_description:
#      doc: Ideally reference to another application definition that gives details for the preparation of the sample. If such an application definition is not available, use this field to give preparation details." },
    description:
    short_title:
    temperature:
      type: nx_float
      units: nx_temperature
    atom_types:
      exists: required
      doc: "Use Hill's system for listing elements of the periodic table which are inside or attached to the surface of the specimen and thus relevant from a scientific point. The purpose of this field is to allow materials database to parse the relevant elements without having to interpret the sample history."
  nx_monitor:
    exists:recommended
  data__nx_data:
    link:
    doc: Hard link to a location in the hierarchy of the NeXus file where the data are stored
  scan_align__nx_process:
    program_name:
      doc: Commercial or otherwise defined given name to the program that was used to process the data on-the-fly.
    program_version:
      doc: Either version with build number, commit hash, or description of a (online) repository where the source code of the program and build instructions can be found so that the program can be configured in such a way that result files can be created ideally in a deterministic manner.
    description:
      doc: Ideally, a reference to the location or a unique (globally persistent) identifier (e.g.) of e.g. another file which gives as many as possible details of this processing steps. In the case that such a detailed history of the processing (steps) is not available, use this field as a free-text description of this processing.
    misc__nx_collection:
      cartesian_scan_dimensions:
        type: nx_uint
        doc: to be defined I need to double check with Christoph Koch what this is, but I think the member names for this and the next two members are not nice. I consider these three more like a dummy like the WONI experiment to understand how to store n-dimensional data using NeXus.
      cartesian_scan_dimension_1_count:
        type: nx_uint
        doc: to be defined
      cartesian_scan_dimension_2_count:
        type: nx_uint
        doc: to be defined
      acquired_data__nx_data:
        \@signal: imagestack
        \@axes: [imageid, ypos, xpos]
        \@imageid_indices: 2
        \@ypos_indices: 1
        \@xpos_indices: 0
        data:
          type: nx_float
          dimensions:
            rank: 3
            dim: [[2, nimages], [1, ny], [0, nx]]
        imageid:
          type: nx_uint
          dimensions:
            rank: 1
            dim: [[2,nimages]]
          \@long_name:
            doc: Label for the image axis
        ypos:
          type: nx_number
          dimensions:
            rank: 1
            dim: [[1,ny]]
          \@long_name:
            doc: Label for the y axis
        xpos:
          type: nx_number
          dimensions:
            rank: 1
            dim: [[0,nx]]
          \@long_name:
            doc: Label for the x axis
        doc: A stack of two-dimensional images with imageid changing slowest, ypos changing faster, and xpos changing fastest, i.e. xpos + ypos * nx + imageid * nx*ny implicit C-style indexing.
      series_params__nx_data:
        doc: to be defined, series_params, A collection of parameter pairs for each image, i.e. 0 or 1 + imageid * 2 implicit indexing
        data:
        type: nx_number
        dimensions:
          rank: 2
          dim: [[1, nimages], [0, 2]]
      aligned_positions__nx_data:
        data:
        type: nx_number
        dimensions:
            rank: 2
            dim: [[1, nimages], [0, 5]]
        doc: A collection of alignment position quintets for each image, i.e. 0, 1, ..., 4 + imageid * 5 implicit indexing
  em_lab__nx_instrument:
    exists: [min, 1]
    name:
      doc: Name of the microscope.
    time_zone:
      type: nx_date_time
      units: nx_time
    instrument_manufacturer:
      doc: Manufacturer of the entire instrument to enable e.g. queries about manufacturers. Usually more technical details are needed which is why it is recommended to fill as many of the individual components of the instrument as required for interpreting the experiment.
    instrument_model: 
      doc: Manufacturer brand/model to enable e.g. queries about microscope models. See comments on instrument_manufacturer on how to provide further specification.
    instrument_capability:
      doc: "Free-text list of controlled EM-community vocabulary terms of functional components. If provided, compose the list from the following terms: Feg, Astar, OmegaFilter."
    gun__nx_source:
      exists: required
      doc: The source creating the electron beam.
      voltage:
        type: nx_float
        units: nx_voltage
        doc: Voltage relevant to compute the energy of the electrons immediately after they left the gun.
      probe:
        enumeration: [electron]
      wavelength:
        type: nx_float
        units: nx_wavelength
        doc: to be discussed
      emitter_type:
        doc: Emitter type used to create the beam. Choose one of the following thermionic, schottky, feg, to we need an extra one for cold-feg.
        enumeration: [thermionic, schottky, feg]
      description:
        doc: Ideally a reference to (another) file (ideally formatted using also an application definition) via a link, name, or a (globally unique) persistent identifier to give further details about the electron gun.
    gun_aperture_nx_aperture:
    condenser_lens_1__nx_em_lens:
    condenser_lens_2__nx_em_lens:
    condenser_lens_1_aperture__nx_aperture:
    condenser_lens_2_aperture__nx_aperture:
      doc: An aperture (to be discussed or diaphragm) for the electron beam.
      name:
      manufacturer_name:
        doc: Name of the manufacturer who built/constructed the aperture.
      manufacturer_model:
        doc: Hardware name/serial number or hash identifier given by the manufacturer to identify the aperture.
      description:
        doc: An (ideally globally unique) persistent identifier, link, or text which gives further details.
      nx_transformations:
    cs_corrector__nx_em_cs_corr:
    prefield_or_mini_lens__nx_em_lens:
    scanning_coils__nx_em_deflector:
    specimen_stage__nx_em_stage:
#      type: nx_positioner
#     name:
#     description:
#     value:
#       type: nx_number
#       doc: stage position
    objective_lens__nx_em_lens:
    objective_mini_lens__nx_em_lens:
    selected_area_aperture__nx_aperture:
    intermediate_lens_1__nx_em_lens:
    intermediate_lens_2__nx_em_lens:
    intermediate_lens_3__nx_em_lens:
    intermediate_lens_4__nx_em_lens:
    haadf_detector__nx_detector:
#   omega_filter__nx_em_omega_filter:
    energy_filter_1_aperture__nx_aperture:
    energy_filter_1__nx_filter:
    projector_lens_1__nx_em_lens:
    projector_lens_2__nx_em_lens:
    projector_lens_3__nx_em_lens:
    projector_lens_4__nx_em_lens:
    fluorescent_screen_detector__nx_detector:
#    mirror_1__nx_em_mirror:
    ccd_camera_1__nx_detector:
      doc: Description of the type of the detector e.g. CCD, scintillator, direct electron, image plate, CMOS
      manufacturer_name:
        doc: Name of the manufacturer who built/constructed the detector
      manufacturer_model:
        doc: Hardware name/serial number or hash identifier given by the manufacturer to identify the detector.
      sensor_material:
      bit_depth_readout:
        type: nx_int
      number_of_cycles:
        type: nx_int
      x_pixel_size:
        type: nx_float
        units: nx_length
      y_pixel_size:
        type: nx_float
        units: nx_length
      flatfield_applied:
        type: nx_boolean
      flatfield:
        type: nx_float
      exposure:
        type: nx_number
        units: nx_time
      description:
        doc: Free text option to write further details about the detector.
      nx_collection:
        darkfield_applied:
          type: nx_boolean
          doc: to be defined, what is the idea of the darkfield here, using the camera for dark field imaging mode or is this related to eigen noise of the detector without illumination
        darkfield:
          type: nx_float
          doc: what is the idea of the darkfield here, using the camera for dark field imaging mode or is this related to inherent noise of the detector without illumination
        pixel_size_x:
          type: nx_float
          units: nx_per_length
        pixel_size_y:
          type: nx_float
          units: nx_per_length
        cartesian_scan_dimensions:
          type: nx_uint
          doc: to be defined
        cartesian_scan_dimension_1_count:
          type: nx_uint
          doc: to be defined
        cartesian_scan_dimension_2_count:
          type: nx_uint
          doc: to be defined
        cartesian_scan_dimension_3_count:
          type: nx_uint
          doc: to be defined
        scan_properties__nx_collection:
        scan_system_name:
          doc: to be defined
        x_points_step_width:
          type: nx_int
          doc: to be defined
        y_points_step_width:
          type: nx_int
          doc: to_be_defined
#        nx_data:
#          doc: raw data
    dark_field_detector__nx_detector:
    bright_field_detector__nx_detector:
    ccd_camera_2__nx_detector:
    eels_aperture__nx_aperture:
    eels_detector__nx_detector: