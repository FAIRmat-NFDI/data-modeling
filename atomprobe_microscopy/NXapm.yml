#kuehbacm at hu-berlin.de, 12/2021
#a draft version of a NeXus application definition for atom probe microscopy
#the draft uses the application example of atom probe tomography and field ion microscopy experiments
#the draft is strongly inspired by the instrument use case of AMETEK's, so-called local electrode atom probe (LEAP)
#instrument design
category: application
doc: Draft application definition for atom probe tomography and related field ion microscopy, all summarized as atom probe microscopy experiments.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays
  Nions: Total number of ions collected
  #32 is a reasonable large default value to cover even the most complicated fragments hitherto reported in the atom probe literature
(NXapm):
  (NXentry):
    exists: required
    definition:
      exists: required
      doc: Official NeXus NXDL schema to which this entry conforms.
      \@version:
        doc: Version specifier enabling to document modification of the schema.
    experiment_identifier:
      exists: required
      doc: Ideally, a (globally persistent) unique identifier for referring to this experiment. The identifier is usually defined/issued by the facility, laboratory, or the principle investigator. The identifier enables to link experiments to e.g. proposals.
    experiment_description:
    start_time(NX_DATE_TIME):
      exists: recommended
    end_time(NX_DATE_TIME):
      exists: recommended
    time_zone(NX_DATE_TIME):
      exists: required
      doc: ISO 8601 time_zone offset from UTC.
    duration(NX_INT):
      unit: NX_TIME
    collection_time(NX_INT):
      unit: NX_TIME
    program_name:
      exists: recommended
      doc: Commercial or otherwise given name to the program that was used to acquire/measure the dataset. Atom probe microscopy experiments are nowadays still in most cases operated/performed via commercial integrated acquisition and instrument control software. For AMETEK LEAP instruments the least processed (rawest) numerical results and metadata are stored in so-called RHIT and HITS files and supplementary metadata in the database that is connected to the control software. RHIT and HITS are proprietary binary file formats whose content must not be accessed with software other than of AMETEK (IVAS/APSuite). In effect, RHIT and HITS store the experiment in a closed manner that is practically useless without having the commercial software. To arrive at a state that atom probe microscopy delivers a dataset with which one can study atomic position and do composition analyses, these raw data have to be processed. Therefore, for an application definition to be useful it needs to store details about the physical acquisition of the raw data and all its processing steps to arrive at derived quantities like ion hit positions (on the detector), calibrated time-of-flight data, and from calibrated mass-to-charge-state ratios, and tomographically reconstructed computed atomic positions. In many cases cases an APM dataset is useful only if its post-processed via so-called ranging. Ranging defines a set of rules how to map between tof and mass-to-charge data on ion types to decode elemental identities. All these steps are in most cases performed using commercial software. Frequently, though, ranging is also performed in (open-source) research software. Therefore, there is strictly speaking not a single program used in atom probe to arrive at a useful reconstructed and ranged dataset. Hence, the reason to design the application definition with the acquisition and key post-processing steps.
      \@version:
        exists: recommended
        doc: Program version i.e. build number, commit hash, or description of a (online) repository where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result file is numerically recreatable in the same deterministic manner.
    experiment_documentation(NXnote):
      exists: optional
      doc: Binary container for a file which can be used to add a description of additional details to the experiment. The container can hold e.g. a ppt, pdf, latex, txt, image, ...).
    thumbnail(NXnote):
      exists: recommended
      doc: A small image that is representative of the entry. For reconstructed datasets it is recommended to display the reconstruction with a scale bar as a 640x480 pixel jpeg image.
      \@type:
    operation_mode(NX_CHAR):
      exists: required
      doc: What type of atom probe microscope experiment is performed. This field can be used e.g. by materials database systems to qualitatively filter experiments.
      enumeration: [leap, apt, fim, apt-fim]
    operator(NXuser):
      exists: [min, 1, max, infty]
      doc: Contact information of at least the user of the instrument who measured this specimen or the principal investigator who performed this experiment. Adding multiple users if relevant is recommended.
      name:
        exists: required
      affiliation:
        exists: recommended
        doc: Name of the affiliation of the user at the point in time when the experiment was performed.
      address:
        exists: recommended
      email:
        exists: required
      orcid:
        exists: recommended
      telephone_number:
        exists: recommended
      role(NX_CHAR):
        exists: optional
        doc: Which role does the person have (e.g. technician operating the microscope, student, postdoc, principal investigator, ...)
    specimen(NXsample):
      exists: required
      name:
        exists: required
        doc: Descriptive name or identifier with which to distinguish the specimen from all others. In cases where the specimen was e.g. site-specifically cut from samples or in cases of an instrument session during which multiple specimens are loaded, the name has to be descriptive enough to resolve which specimen on e.g. the microtip array was taken. The user is advised to store the details how specimens were cut/prepared from samples in the sample history.
      sample_history:
        exists: required
        doc: Ideally, a reference to the location of or a (globally persistent) unique identifier of e.g. another file which should document ideally as many details as possible of the material, its microstructure, and its thermo-chemo-mechanical processing/preparation history. In the case that such a detailed history of the sample/specimen is not available, use this field as a free-text description to specify a sub-set of the entire sample history, i.e. what you would consider being the key steps of the preparation.
      preparation_date(NX_DATE_TIME):
        exists: required
        doc: ISO8601 date and time when the specimen was prepared. This is especially required for environmentally sensitive samples such as hydrogen-charged specimens or experiments including tracers with a short half-time.
      preparation_time_zone(NX_DATE_TIME):
        exists: required
        doc: ISO 8601 time_zone offset from UTC. Required, as it is possible that the specimen was prepared in a different place/laboratory than where the experiment/measurement is performed.
      short_title:
      atom_types:
        exists: required
        doc: "Use Hill's system for listing elements of the periodic table which are inside or attached to the surface of the specimen and thus relevant from a scientific point. This field can be used by materials database systems to parse the relevant elements without having to interpret these from the sample history."
    (NXdata):
      exists: required
      doc: Hard link to a location/locations in the hierarchy of the NeXus file where the data for default plotting are stored.
      detector_stack(link):
        target: /entry/atom_probe/ion_impact_positions/hit_positions
        #handle default plotting
      tomographic_reconstruction(link):
        target: /entry/atom_probe/reconstruction/reconstructed_positions
      #how to allow for either or? namely when users upload a POS file only, we have only access to the tomographic_reconstruction, if they upload an EPOS file then we have the tomographic_reconstruction and the hit_positions
    atom_probe(NXinstrument):
      exists: required
      doc: An atom probe microscope is fundamentally different to a large-scale facility accelerator or electron microscope in at least two ways. First, ionized atoms and molecular ions ions and/or the imaging gas ions (in the case of field ion microscopy) are accelerated towards a position-sensitive and time-of-flight taking detector system. Hence, there is no real beam. This also causes that second the specimen is the lens of the an atom probe microscope. Therefore, we modify the reference coordinate system that is usually referred to in NeXus - the McStas coordinate system. We call the reference coordinate system the specimen coordinate system. To be consistent with accelerator and microscopy techniques we define that the positive z-axis points outwards from the apex of the specimen into the vacuum towards the detector. The coordinate system remains/is a right-handed one. We define clockwise rotations to be positive.
      name:
        doc: Name of the microscope.
      location(NX_CHAR):
        doc: Geographic coordinates of the lab or the place where the instrument is installed.
      instrument_manufacturer:
        exists: required
        doc: Manufacturer of the entire instrument (e.g. AMETEK/Cameca) to enable e.g. queries in materials database systems for instrument manufacturers. Usually more technical details are needed though to specify the instrument.
      instrument_model:
        exists: recommended
        doc: Manufacturer brand/model to enable e.g. queries about microscope models (e.g. LEAP3000XS).
      instrument_capability:
        doc: Free-text list possibly multiple terms of functionalities which the instrument provides. The values are to be picked from a bag of controlled words.
      flight_path_length(NX_FLOAT):
        exists: recommended
        doc: to be defined
        unit: NX_LENGTH
      counter_electrode(NXlens_em):
        flat_tests(NXcollection):
      counter_electrode_aperture(NXaperture):
      ion_detector(NXdetector):
        doc: In atom probe the detector is a delay line detector.
        type:
          exists: recommended
          doc: Description of the detector type.
          enumeration: [mcp-dld, phosphor-ccd]
        manufacturer_name:
          doc: Name of the manufacturer who built/constructed the detector.
        manufacturer_model:
          doc: Hardware name/serial number or hash identifier given by the manufacturer to identify the detector.
        (NXtransformations):
          doc: Affine transformation which aligns the Cartesian right-handed coordinate system which defines the detector space with the specimen space. In atom probe microscopy a frequently used choice is to discuss the so-called detector space image (stack). This is a stack of two-dimensional histograms of detected ions within a predefined evaporation ID interval. Typically, the set of ion evaporation sequence IDs is grouped into chunks. For each chunk a histogram of the ion hit positions on the detector is computed. This leaves the possibility for inconsistency between the so-called detector coordinate system and a specimen-affixed coordinate system. The transformation here can resolve this ambiguity as it clarifies how the positive z-axes of either coordinate systems can be oriented.
        signal_amplitude(NX_FLOAT):
          exists: optional
          doc: Amplitude of the signal detected on the MCP as used historically in ATO files.
          unit: NX_CURRENT
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      laser_or_high_voltage_pulser(NXpulser_apm):
      stage(NXstage):
        ##cryo controller holder, type of holder, material for pucks makes a difference for e.g. hydrogen contamination, equally dwell time in buffer and load lock chamber and environmental transfer, the application definition does not account for this at the moment, would need a class representing stage and specimen holder hierarchy of the entire sample loading and transfer system and the contributions or not these components make wrt to contamination
        base_temperature(NX_FLOAT):
          exists: recommended
          doc: Average base temperature during the measurement.
          unit: NX_TEMPERATURE
        #base_temperature_time_profile(NXtime_data):
        #  exists: recommended
        #  doc: Base temperature (time) profile during the measurement. Use base_temperature if a nominal/average value suffices.
        #  #will the symbols from NXtime_data be carried over, goes along the line of tommaso's comment:
        #  #In order to extend existing base classes, would it make sense to add a function to yam2nxdl that, if a base class already exists,
        #  #only appends the new fields? I think the issue of significant extensions of existing base classes will arise also for other people...
        #  symbols:
        #    doc: The symbols used in the schema to specify e.g. dimensions of arrays.
        #    Nsnapshots: Number of values sampled
        #  event_time_zero(NX_DATE_TIME):
        #    exists: required
        #    doc: ISO8601 when time monitoring started.
        #  time(NX_NUMBER):
        #    exists: required
        #    doc: Offset to event_time_zero when a snapshot is taken.
        #    unit: NX_TIME
        #    dimensions:
        #      rank: 2
        #      dim: [[1, Nsnapshots]]
        #  base_temperature(NX_FLOAT):
        #    exists: required #means if an NXtime_data group is added it needs to be populated not only with time but also base_temperature data
        #    unit: NX_TEMPERATURE
        #    dimensions:
        #      rank: 1
        #      dim: [[2, Nsnapshots]]
      control_software(NXcollection):
        doc: The majority of atom probe microscopes comes from a single commercial manufacturer AMETEK (formerly Cameca). Their instruments are controlled via an(/a set) of integrated instrument control system(s) (APSuite/IVAS/Davis). By contrast, instruments which were built by individual research groups such as of the French (GPM, Rouen, France), the Schmitz (Inspico, Stuttgart, Germany), the Felfer (Oxcart, Erlangen, Germany), or the PNNL group (Pacific Northwest National Laborary, Portland, Oregon, U.S.) have individual solutions to control the instrument. Some of which are modularized and open, some of which realize also integrated control units with portions of eventually undisclosed source code and lacking open APIs. Currently, the is no community-specific API for getting finely granularized access to such control settings. This motivates the current design of the application definition via a collection. Holding heterogeneous, not yet standardized pieces of information is the purpose of this collection.
        analysis_chamber(NXcollection):
          #symbols:
          #  Ntlogs: Number of time logs
          doc: Track time-dependent settings over the course of the measurement about the environment in the analysis chamber such as gas pressure values etc.
          pressure(NX_FLOAT):
            exists: recommended
            doc: Average pressure in the analysis chamber
            unit: NX_PRESSURE
          #follow the example of base_temperature_time_profile
          #pressure_time_profile(NX_FLOAT):
          #  exists: recommended
          #  dimensions:
          #    rank: 2
          #    dim: [[2, Ntlogs]]
          #  unit: NX_ANY
        buffer_chamber(NXcollection):
          doc: Track time-dependent settings over the course of the measurement and loading about the environment in the buffer chamber such as gas pressure values etc.
        load_lock_chamber(NXcollection):
          doc: Track time-dependent settings over the course of the measurement and loading about the environment in the load-lock chamber such as gas pressure values etc.
      specimen_monitoring(NXcollection):
        doc: A place where details about the initial shape of the specimen can be stored. Ideally, here also data about the shape evolution of the specimen can be stored.
        initial_radius(NX_FLOAT):
          doc: Initial radius of the specimen
          unit: NX_LENGTH
        shank_angle(NX_FLOAT):
          doc: to be defined
          unit: NX_ANGLE
      ion_impact_positions(NXprocess):
        #program and version are inherited from NXprocess
        symbols:
          doc: Symbols used in the schema to specify e.g. dimensions of arrays
          Ndldwires: Total number of independent wires in the delay-line detector
        exists: optional
        doc: Data post-processing step of analog-to-digital conversion of the detector signals into ion hit positions. This processing takes place partly in the control unit of the detector and is instructed and monitored by the acquisition/instrument control software. Therefore, the exact details are, at least in the case of AMETEK instruments (the large majority of installations worldwide) kept proprietary and inaccessible. Nevertheless, this group in the hierarchy should be used to store the ion hit positions.
        arrival_time_pairs(NX_NUMBER):
          exists: optional
          doc: Raw readings from the analog-to-digital-converter timing circuits of the detector wires.
          unit: NX_TIME
          dimensions:
            rank: 3
            dim: [[1, 2], [2, Ndldwires], [3, Nions]]
        hit_positions(NX_FLOAT):
          exists: required
          doc: Evaluated ion impact coordinates at the detector (either as computed from the arrival time pairs or reported as the result of a not further specified processing).
          unit: NX_LENGTH
          dimensions:
            rank: 2
            dim: [[1, 2], [2, Nions]]
        detection_rate(NX_FLOAT):
          doc: Average detection rate over the course of the experiment.
          exists: recommmended
          unit: NX_DIMENSIONLESS
        #follow the example of base_temperature_time_profile
        #detection_rate_time_profile(NX_FLOAT):
        #  doc: Spatio-temporal profile of the detection rate since the start of the measurement.
        #  #how to handle cases when we would like to store ideally an array where one dimensions is NX_TIME and the other one is e.g. NX_PERCENT 
      hit_multiplicity(NXprocess):
        #program and version are inherited from NXprocess
        exists: optional
        doc: Data post-processing step that is usually executed in the integrated control software, yielding how many ions where detected in the pulse which yields the multiplicity of the ion.
        pulses_since_last_ion(NX_UINT):
          exists: optional
          doc: Number of pulses since the last detected ion (pulses). For multi-hit records, after the first record, this is zero.
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
        hit_multiplicity(NX_UINT):
          exists: optional
          doc: Hit multiplicity. For multi-hit records, after the first record, this is zero.
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
        pulse_id(NX_UINT):
          exists: optional
          doc: Number of pulses since the start of the atom probe run
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
      ion_filtering(NXprocess):
        #program and version are inherited from NXprocess
        exists: optional
        doc: Data post-processing step to identify which of the detected ions should be included in the voltage-and-bowl correction.
        evaporation_id_included(NX_BOOLEAN):
          exists: required
          doc: Bitmask if ion is to be considered or not
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      voltage_and_bowl_correction(NXprocess):
        #program and version are inherited from NXprocess
        exists: optional
        doc: Data post-processing step to correct for ion impact position flight path differences, detector biases, and nonlinearities.
        raw_tof(NX_FLOAT):
          exists: required
          doc: Raw time-of-flight data as read-out from the acquisition software if these are available.
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        calibrated_tof(NX_FLOAT):
          exists: required
          doc: Calibrated time-of-flight
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        parameter(NXcollection):
          exists: optional
          doc: The key idea and algorithm of the voltage-and-bowl correction is qualitatively similar for instruments of different manufacturers or research groups but different specific calibration models exists. In the first draft of the application definition we do not wish to resolve or generalize these differences. Rather the purpose of this collection is to provide a container where the model specific parameters and calibration models can be stored that define the voltage-and-bowl correction. For AMETEK LEAP systems this should be the place for storing initial calibration values, which typically (only) AMETEK service engineers calibrate for the detector and instrument. Furthermore, one could then also store here the iteratively identified calibrations which scientists will get displayed in e.g. APSuite while executing the voltage-and-bowl correction as part of the reconstruction pipeline.
      mass_to_charge_conversion(NXprocess):
        #program and version are inherited from NXprocess
        exists: optional
        doc: Data post-processing step in which calibrated time-of-flight data (tof) are interpreted into mass-to-charge state ratios.
        parameter(NXcollection):
          exists: optional
          doc: Like for the voltage-and-bowl correction this collection should be used for storing vendor-specific calibration models if available.
        mass_to_charge(NX_FLOAT):
          exists: required
          doc: Mass-to-charge state ratio
          unit: NX_ATOMIC_MASS_UNIT
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      reconstruction(NXprocess):
        #program and version are inherited from NXprocess
        exists: optional
        doc: Data post-processing step to create a tomographic reconstruction of the specimen based on selected calibrated ion hit positions, the evaporation sequence, and voltage curve data.
        protocol:
          doc: Qualitative statement about which algorithmic approach, i.e. reconstruction protocol is used.
          enumeration: [bas-original, bas-modified, geiser, gault, ivas, apsuite, other]
        reconstructed_positions(NX_FLOAT):
          exists: required
          doc: Three-dimensional reconstructed positions of the ions.
          unit: NX_LENGTH #NX_POSITION would match better if it were to exist, maybe starting point for an ontology NX_POSITION isA
          dimensions:
            rank: 2
            dim: [[1, 3], [2, Nions]]
        reconstruction_parameter(NXcollection):
          doc: Different models and associated algorithms, i.e. (numerical) protocols exist to reconstruct atom probe data. Although these approaches are qualitatively similar, each protocol uses different parameters (and interprets these differently). The source code to reconstruction protocols of the IVAS/APSuite software, which the large majority of experiments uses when analyzing atom probe experiments, is not open. Therefore, it is difficult for now to generalize the meaning and idea behind all relevant reconstruction parameters. One could create a class for each reconstruction method, as these methods are de facto application definitions. For now we store the reconstruction parameter in a collection.
          #for AMETEK, Bas, Geiser, and Gault protocol we know the parameters should they already be added here?
      ranging(NXprocess):
        exists: optional
        doc: Data post-processing step in which elemental, isotopic, and/or molecular identities are assigned to the ions. #based on ideas from M. K\"uhbach et al. 2021, Microsc. Microanal.
        number_of_iontypes(NX_UINT):
          exists: required
          doc: How many ion types are distinguished
          unit: NX_UNITLESS
        mass_to_charge_distribution(NXprocess):
          exists: recommended
          doc: Usually mass-to-charge values are studied as an ensemble quantity and binned so document here settings related to (eventual) binning.
          range(NX_FLOAT):
            exists: recommended
            doc: Smallest and largest mass-to-charge value.
            unit: NX_ATOMIC_MASS_UNIT
            dimensions:
              rank: 1
              dim: [[1, 2]]
          increment(NX_FLOAT):
            exists: recommended
            doc: Binning width
            unit: NX_ATOMIC_MASS_UNIT
        background_quantification(NXprocess):
          exists: recommended
          doc: Details of the background model
        peak_search_and_deconvolution(NXprocess):
          exists: recommended
          doc: How where peaks in the background-corrected mass-to-charge histogram identified.
          peaks(NXpeak):
            exists: [min, 0, max, infty]
            doc: List of peaks
        peak_identification(NXprocess):
          exists: recommended
          doc: Details about how a peak, with taking into account error models, was interpreted as an iontype or not.
        iontypes(NXion):
          exists: [min, 1, max, infty]
          doc: The individual ions and their set of mass-to-charge intervals (ranges).
      clustering(NXprocess):
        exists: optional
        doc: to be defined 
        evaporation_id_included(NX_BOOLEAN):
          exists: required
          doc: Bitmask if ion is to be considered or not
          unit: NX_UNITLESS
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        feature_id(NX_UINT):
          exists: recommended
          doc: In case of running a clustering analysis on the entire dataset we might add a label which specifies to which microstructural feature (e.g.) the ion belongs. The value zero is reserved to flag that an ion does not belong to a feature. Therefore, feature identifiers start at 1. #later we could add at some value.
          unit: NX_UNITLESS
          dimensions:
            rank: 1
            dim: [[1, Nions]]